name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install uv && make setup-dev
      - name: Create Build for Linux
        run: make build
      - name: Download linuxdeploy
        run: |
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage -O linuxdeploy
          chmod +x linuxdeploy
      - name: Install AppImage
        run: |
          mkdir -p AppDir/usr/bin
          cp dist/password-manager/password-manager AppDir/usr/bin/
          chmod +x AppDir/usr/bin/password-manager
          cp password-manager.desktop AppDir/
          cp frontend/images/password_manager_icon.png AppDir/
          ./linuxdeploy \
            --appdir AppDir \
            --desktop-file AppDir/password-manager.desktop \
            --icon-file AppDir/password-manager_icon.png \
            --output appimage \
            --plugin python
      - name: Upload Linux Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: password-manager-linux-appimage-${{ matrix.python-version }}
          path: ./*.AppImage

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies for Windows
      run: pip install uv && make setup-dev
    - name: Create Build for Windows
      run: make build
    - name: Upload Windows Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist/password-manager/password-manager.exe

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/linux
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/windows
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            dist/linux/**/*.AppImage
            dist/windows/**/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
